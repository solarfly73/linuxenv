find_git_branch() {
  # Based on: http://stackoverflow.com/a/13003854/170413
  local branch
  if branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null); then
    if [[ "$branch" == "HEAD" ]]; then
      branch='detached*'
    fi
    # using git hubflow, shorten "feature/" to "f/"
    branch=$(echo $branch | sed -e 's,feature/,f/,')
    git_branch="($branch)"
  else
    git_branch=""
  fi
}

. $HOME/.colors

find_git_dirty() {
  local status=$(git status --porcelain 2> /dev/null)
  if [[ "$status" != "" ]]; then
    git_dirty='*'
  else
    git_dirty=""
  fi
}

find_curpwd() {
    DIR=$(pwd | sed -e "s!$HOME!~!")
    if [ ${#DIR} -gt 22 ]; then
        curpwd=..${DIR:${#DIR}-18}
    else
        curpwd=$DIR
    fi
}

find_user() {
    if id | grep "uid=0" 2>&1 > /dev/null; then
        prompt_user=0
        prompt_sign="#"
    else
        prompt_user=1
        prompt_sign="\$"
    fi
}


PROMPT_COMMAND="find_git_branch; find_git_dirty; find_curpwd; find_user"

# Default Git enabled prompt with dirty state
# export PS1="\u@\h \w \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\$ "

# Another variant:
# export PS1="\[$bldgrn\]\u@\h\[$txtrst\] \w \[$bldylw\]\$git_branch\[$txtcyn\]\$git_dirty\[$txtrst\]\$ "

# Default Git enabled root prompt (for use with "sudo -s")
# export SUDO_PS1="\[$bakred\]\u@\h\[$txtrst\] \w\$ "
